name: CDK Deployments

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Choose environment (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    if: github.event.inputs.target_environment == 'staging'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      # Step 3: Build Go lambda in Amazon Linux 2 container
      # Using Amazon Linux 2 for compatibility with the AWS Lambda provided.al2 runtime
      - name: Build Go lambda in Amazon Linux 2 container
        run: |
          docker run --rm -v "$PWD":/go/src/myapp -w /go/src/myapp amazonlinux:2 bash -c "\
          yum install -y golang zip && \
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -o bootstrap . && \
          zip function.zip bootstrap"

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 034362052544.dkr.ecr.us-east-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: docker build -t mentorship-app .

      # Step 6: Tag Docker image
      - name: Tag Docker image
        run: docker tag mentorship-app:latest 034362052544.dkr.ecr.us-east-1.amazonaws.com/mentorship-app:latest

      # Step 7: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: docker push 034362052544.dkr.ecr.us-east-1.amazonaws.com/mentorship-app:latest

      # Step 8: Install CDK
      - name: Install CDK
        run: npm install -g aws-cdk

      # Step 9: Install NodeJS dependencies
      - name: Install dependencies
        run: npm install

      # Step 10: Synthesize the CDK stack (CloudFormation templates)
      - name: Synth
        run: cdk synth

      # Step 11: Bootstrap the environment if necessary
      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      # Step 12: Deploy the CDK stack (for Staging)
      - name: Deploy
        run: cdk deploy MentorshipAppBackendStagingStack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-production:
    if: github.event.inputs.target_environment == 'production'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Build Go lambda in Amazon Linux 2 container
        run: |
          docker run --rm -v "$PWD":/go/src/myapp -w /go/src/myapp amazonlinux:2 bash -c "\
          yum install -y golang zip && \
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -o bootstrap . && \
          zip function.zip bootstrap"

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 034362052544.dkr.ecr.us-east-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        run: docker build -t mentorship-app .

      - name: Tag Docker image
        run: docker tag mentorship-app:latest 034362052544.dkr.ecr.us-east-1.amazonaws.com/mentorship-app:latest

      - name: Push Docker image to ECR
        run: docker push 034362052544.dkr.ecr.us-east-1.amazonaws.com/mentorship-app:latest

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: npm install

      - name: Synth
        run: cdk synth

      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      - name: Deploy
        run: cdk deploy MentorshipAppBackendProductionStack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
