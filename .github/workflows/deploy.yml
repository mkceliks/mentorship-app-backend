name: CDK Deployments

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Choose environment (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    if: github.event.inputs.target_environment == 'staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22  # If Go 1.22 is not available, use the latest available version.

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build Go lambda
        working-directory: ./handlers/s3
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap
          zip function.zip bootstrap

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: npm install

      - name: Synth
        run: cdk synth

      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      - name: Deploy
        run: cdk deploy MentorshipAppBackendStagingStack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-production:
    if: github.event.inputs.target_environment == 'production'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22  # If Go 1.22 is not available, use the latest available version.

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build Go lambda
        working-directory: ./handlers/s3
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap
          zip function.zip bootstrap

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: npm install

      - name: Synth
        run: cdk synth

      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      - name: Deploy
        run: cdk deploy MentorshipAppBackendProductionStack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}