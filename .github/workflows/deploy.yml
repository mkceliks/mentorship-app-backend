name: CDK Deployments

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Choose environment (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: docker pull amazonlinux:2

      - name: Build and Package Lambda Functions
        run: |
          mkdir -p output
          for main_file in $(find handlers -type f -name "main.go"); do
            dir=$(dirname $main_file)           
            function_name=$(basename $dir)   
            echo "Building Lambda function for $function_name"
            docker build --build-arg FUNCTION_NAME=$function_name -t lambda-$function_name .
            container_id=$(docker create lambda-$function_name)
            docker cp $container_id:/app/output/${function_name}_function.zip output/
            docker rm $container_id
          done
        shell: bash

      - name: List Output Directory After Docker Copy
        run: ls -la output

      - name: Check for Missing Lambda Zips
        run: |
          missing_files=0
          for main_file in $(find handlers -type f -name "main.go"); do
            function_name=$(basename $(dirname $main_file))
            if [ ! -f output/${function_name}_function.zip ]; then
              echo "Error: ${function_name}_function.zip is missing."
              missing_files=$((missing_files+1))
            fi
          done
          if [ $missing_files -ne 0 ]; then
            echo "One or more Lambda packages are missing."
            exit 1
          fi

      - name: Install Node.js and Amplify CLI
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install -g @aws-amplify/cli

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Synthesize the CDK stack
        run: cdk synth

      - name: Deploy Stack
        run: |
          if [ "${{ github.event.inputs.target_environment }}" == "staging" ]; then
            cdk deploy mentorshipstaging --require-approval never
          elif [ "${{ github.event.inputs.target_environment }}" == "production" ]; then
            cdk deploy mentorshipproduction --require-approval never
          fi

      - name: Configure Amplify and Pull Environment
        run: |
          amplify pull --appId d3a95eikyeftzd --envName master --yes

      - name: Push Amplify Backend Resources
        run: amplify push --yes
