name: CDK Deploy

on:
  # Manually trigger deployments for staging or production
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Choose environment (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    if: github.event.inputs.target_environment == 'staging'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Synthesize CDK Template
        run: cdk synth

      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      - name: Deploy to Staging Environment
        run: cdk deploy MentorshipAppBackendStagingStack --require-approval never

  deploy-production:
    if: github.event.inputs.target_environment == 'production'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Synthesize CDK Template
        run: cdk synth

      - name: Bootstrap environment if needed
        run: cdk bootstrap || echo "Already bootstrapped"

      - name: Deploy to Production Environment
        run: cdk deploy MentorshipAppBackendProductionStack --require-approval never
