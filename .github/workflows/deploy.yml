name: CDK Deployments

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Choose environment (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Amazon Linux 2 container for Go Lambda builds
        run: docker pull amazonlinux:2

      - name: Discover and Build Lambda Functions
        run: |
          for dir in $(find handlers/s3/* -type d); do
            if [ -f "$dir/main.go" ]; then
              function_name=$(basename "$dir")
              echo "Building Lambda function: $function_name"
              docker run --rm -v "$PWD":/go/src/mentorship-app -w "/go/src/mentorship-app/$dir" amazonlinux:2 \
              bash -c "yum install -y zip golang && \
              GOOS=linux GOARCH=amd64 go build -o bootstrap main.go && \
              zip ${function_name}_function.zip bootstrap"
            fi
          done
        shell: bash

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Synthesize the CDK stack
        run: cdk synth

      - name: Deploy Stack
        run: |
          if [ "${{ github.event.inputs.target_environment }}" == "staging" ]; then
            cdk deploy MentorshipAppBackendStagingStack --require-approval never
          elif [ "${{ github.event.inputs.target_environment }}" == "production" ]; then
            cdk deploy MentorshipAppBackendProductionStack --require-approval never
          fi
